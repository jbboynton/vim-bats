*bats.txt* Run Bats tests from Vim.

==============================================================================

INTRODUCTION                                                              *bats*

A simple way to envoke Bats tests from Vim.

Repo: https://github.com/jbboynton/vim-bats

==============================================================================

FUNCTIONS                                                       *bats-functions*

Tests can be excuted with one of the following functions.

                                                          *bats-:RunBatsTests()*
:RunBatsTests()          Run all the tests.

                         Equivalent to running:
>
                           bats test/**/*.bats
<
                                                    *bats-:RunCurrentBatsTest()*
:RunCurrentBatsTest()    If the current file is a test file, run all examples
                         in the file.

                         Equivalent to running:
>
                           bats test/current_test.bats
<
                         If the current file is not a test file, run the
                         |last-test| again.

                                             *last-test* *bats-:RunLastBatsTest()*
:RunLastBatsTest()       When |:RunBatsTests()| or |:RunCurrentBatsTest()| is
                         called, the command is recorded. This function
                         re-runs the recorded command.

==============================================================================

KEY MAPPINGS                                                 *bats-key-mappings*

This plugin doesn't define any key mappings by default.

Suggested key mappings:
>
  map <Leader>ba :call RunBatsTests()<CR>
  map <Leader>bc :call RunCurrentBatsTest()<CR>
  map <Leader>bl :call RunLastBatsTest()<CR>
<
==============================================================================

CUSTOM COMMAND                                *bats_command* *bats-custom-command*

Tests use the following command by default:
>
  bats {test}
<
Commands can be customized by overwriting the `g:bats_command` variable:
>
  let g:bats_command = ":Dispatch bats --tap {test}"
<
==============================================================================

CUSTOM DIRECTORY                          *bats_directory* *bats-custom-directory*

In order to run the entire test suite, this plugin tries to infer the location
of the test directory. The plugin looks for the test directory by shelling out
to find the root of the Git repository (which will obviously fail unless a Git
repository actually exists). If it succeeds, the plugin assumes that test
files will be located in a directory named `test`.

If there is no Git repository present, or if tests are located somewhere other
than inside `test`, then the plugin isn't able to make a reasonable guess
about where tests will be stored. To get around this limitation, define the
`g:bats_directory` variable:
>
  let g:bats_directory = "path/to/test/directory"
>
vim:tw=78:et:ft=help:norl:
